// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rfthermaldiscovery.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RFDiscoveryConfig struct {
	Servers              map[string]*RFDiscoveryServer   `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IpUrl                string                          `protobuf:"bytes,2,opt,name=ip_url,json=ipUrl,proto3" json:"ip_url,omitempty"`
	AggUrl               string                          `protobuf:"bytes,3,opt,name=agg_url,json=aggUrl,proto3" json:"agg_url,omitempty"`
	PollingInterval      string                          `protobuf:"bytes,4,opt,name=polling_interval,json=pollingInterval,proto3" json:"polling_interval,omitempty"`
	RfThermalThresholds  map[string]*RFThermalThresholds `protobuf:"bytes,5,rep,name=rf_thermal_thresholds,json=rfThermalThresholds,proto3" json:"rf_thermal_thresholds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RFDiscoveryConfig) Reset()         { *m = RFDiscoveryConfig{} }
func (m *RFDiscoveryConfig) String() string { return proto.CompactTextString(m) }
func (*RFDiscoveryConfig) ProtoMessage()    {}
func (*RFDiscoveryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_rfthermaldiscovery_63bb70584ec0ab7a, []int{0}
}
func (m *RFDiscoveryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFDiscoveryConfig.Unmarshal(m, b)
}
func (m *RFDiscoveryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFDiscoveryConfig.Marshal(b, m, deterministic)
}
func (dst *RFDiscoveryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFDiscoveryConfig.Merge(dst, src)
}
func (m *RFDiscoveryConfig) XXX_Size() int {
	return xxx_messageInfo_RFDiscoveryConfig.Size(m)
}
func (m *RFDiscoveryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RFDiscoveryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RFDiscoveryConfig proto.InternalMessageInfo

func (m *RFDiscoveryConfig) GetServers() map[string]*RFDiscoveryServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *RFDiscoveryConfig) GetIpUrl() string {
	if m != nil {
		return m.IpUrl
	}
	return ""
}

func (m *RFDiscoveryConfig) GetAggUrl() string {
	if m != nil {
		return m.AggUrl
	}
	return ""
}

func (m *RFDiscoveryConfig) GetPollingInterval() string {
	if m != nil {
		return m.PollingInterval
	}
	return ""
}

func (m *RFDiscoveryConfig) GetRfThermalThresholds() map[string]*RFThermalThresholds {
	if m != nil {
		return m.RfThermalThresholds
	}
	return nil
}

type RFDiscoveryServer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	ReqTimeout           int32    `protobuf:"varint,4,opt,name=req_timeout,json=reqTimeout,proto3" json:"req_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFDiscoveryServer) Reset()         { *m = RFDiscoveryServer{} }
func (m *RFDiscoveryServer) String() string { return proto.CompactTextString(m) }
func (*RFDiscoveryServer) ProtoMessage()    {}
func (*RFDiscoveryServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_rfthermaldiscovery_63bb70584ec0ab7a, []int{1}
}
func (m *RFDiscoveryServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFDiscoveryServer.Unmarshal(m, b)
}
func (m *RFDiscoveryServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFDiscoveryServer.Marshal(b, m, deterministic)
}
func (dst *RFDiscoveryServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFDiscoveryServer.Merge(dst, src)
}
func (m *RFDiscoveryServer) XXX_Size() int {
	return xxx_messageInfo_RFDiscoveryServer.Size(m)
}
func (m *RFDiscoveryServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RFDiscoveryServer.DiscardUnknown(m)
}

var xxx_messageInfo_RFDiscoveryServer proto.InternalMessageInfo

func (m *RFDiscoveryServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RFDiscoveryServer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RFDiscoveryServer) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *RFDiscoveryServer) GetReqTimeout() int32 {
	if m != nil {
		return m.ReqTimeout
	}
	return 0
}

type RFThermalThresholds struct {
	LowerNormal          int32    `protobuf:"varint,1,opt,name=lower_normal,json=lowerNormal,proto3" json:"lower_normal,omitempty"`
	UpperNormal          int32    `protobuf:"varint,2,opt,name=upper_normal,json=upperNormal,proto3" json:"upper_normal,omitempty"`
	LowerHigh            int32    `protobuf:"varint,3,opt,name=lower_high,json=lowerHigh,proto3" json:"lower_high,omitempty"`
	UpperHigh            int32    `protobuf:"varint,4,opt,name=upper_high,json=upperHigh,proto3" json:"upper_high,omitempty"`
	LowerCritical        int32    `protobuf:"varint,5,opt,name=lower_critical,json=lowerCritical,proto3" json:"lower_critical,omitempty"`
	UpperCritical        int32    `protobuf:"varint,6,opt,name=upper_critical,json=upperCritical,proto3" json:"upper_critical,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFThermalThresholds) Reset()         { *m = RFThermalThresholds{} }
func (m *RFThermalThresholds) String() string { return proto.CompactTextString(m) }
func (*RFThermalThresholds) ProtoMessage()    {}
func (*RFThermalThresholds) Descriptor() ([]byte, []int) {
	return fileDescriptor_rfthermaldiscovery_63bb70584ec0ab7a, []int{2}
}
func (m *RFThermalThresholds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFThermalThresholds.Unmarshal(m, b)
}
func (m *RFThermalThresholds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFThermalThresholds.Marshal(b, m, deterministic)
}
func (dst *RFThermalThresholds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFThermalThresholds.Merge(dst, src)
}
func (m *RFThermalThresholds) XXX_Size() int {
	return xxx_messageInfo_RFThermalThresholds.Size(m)
}
func (m *RFThermalThresholds) XXX_DiscardUnknown() {
	xxx_messageInfo_RFThermalThresholds.DiscardUnknown(m)
}

var xxx_messageInfo_RFThermalThresholds proto.InternalMessageInfo

func (m *RFThermalThresholds) GetLowerNormal() int32 {
	if m != nil {
		return m.LowerNormal
	}
	return 0
}

func (m *RFThermalThresholds) GetUpperNormal() int32 {
	if m != nil {
		return m.UpperNormal
	}
	return 0
}

func (m *RFThermalThresholds) GetLowerHigh() int32 {
	if m != nil {
		return m.LowerHigh
	}
	return 0
}

func (m *RFThermalThresholds) GetUpperHigh() int32 {
	if m != nil {
		return m.UpperHigh
	}
	return 0
}

func (m *RFThermalThresholds) GetLowerCritical() int32 {
	if m != nil {
		return m.LowerCritical
	}
	return 0
}

func (m *RFThermalThresholds) GetUpperCritical() int32 {
	if m != nil {
		return m.UpperCritical
	}
	return 0
}

func init() {
	proto.RegisterType((*RFDiscoveryConfig)(nil), "proto.RFDiscoveryConfig")
	proto.RegisterMapType((map[string]*RFThermalThresholds)(nil), "proto.RFDiscoveryConfig.RfThermalThresholdsEntry")
	proto.RegisterMapType((map[string]*RFDiscoveryServer)(nil), "proto.RFDiscoveryConfig.ServersEntry")
	proto.RegisterType((*RFDiscoveryServer)(nil), "proto.RFDiscoveryServer")
	proto.RegisterType((*RFThermalThresholds)(nil), "proto.RFThermalThresholds")
}

func init() {
	proto.RegisterFile("rfthermaldiscovery.proto", fileDescriptor_rfthermaldiscovery_63bb70584ec0ab7a)
}

var fileDescriptor_rfthermaldiscovery_63bb70584ec0ab7a = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0xb5, 0x9b, 0x3a, 0x55, 0x26, 0xa5, 0x14, 0x57, 0x15, 0x56, 0x24, 0x44, 0x89, 0x54,
	0xa9, 0x5c, 0x22, 0x28, 0x17, 0xc4, 0x85, 0x43, 0x01, 0xc1, 0x85, 0x83, 0x09, 0xe7, 0xd5, 0x36,
	0x75, 0xbc, 0x16, 0xce, 0xda, 0x9d, 0x75, 0x16, 0xe5, 0x2d, 0x79, 0x0b, 0x5e, 0x03, 0xed, 0xd8,
	0x09, 0xad, 0xb6, 0x39, 0xad, 0xf5, 0xff, 0xdf, 0xcc, 0xfc, 0xb3, 0x03, 0x02, 0x97, 0xa1, 0x52,
	0xb8, 0x2a, 0xed, 0xad, 0x69, 0x16, 0xae, 0x55, 0xb8, 0x99, 0x79, 0x74, 0xc1, 0x71, 0x46, 0x9f,
	0xe9, 0x9f, 0x01, 0x3c, 0x93, 0x5f, 0x3e, 0x6d, 0xcd, 0x6b, 0x57, 0x2f, 0x8d, 0xe6, 0x1f, 0xe1,
	0xb0, 0x51, 0xd8, 0x2a, 0x6c, 0x44, 0x76, 0x3e, 0xb8, 0x1c, 0x5f, 0x5d, 0xc4, 0xaa, 0x59, 0x0f,
	0x9d, 0xfd, 0x88, 0xdc, 0xe7, 0x3a, 0xe0, 0x46, 0x6e, 0xab, 0xf8, 0x19, 0x0c, 0x8d, 0x2f, 0xd6,
	0x68, 0x45, 0x7e, 0x9e, 0x5d, 0x8e, 0x24, 0x33, 0xfe, 0x27, 0x5a, 0xfe, 0x1c, 0x0e, 0x4b, 0xad,
	0x49, 0x1f, 0x90, 0x3e, 0x2c, 0xb5, 0xee, 0x8c, 0xd7, 0x70, 0xe2, 0x9d, 0xb5, 0xa6, 0xd6, 0x85,
	0xa9, 0x83, 0xc2, 0xb6, 0xb4, 0xe2, 0x80, 0x88, 0xa7, 0x49, 0xff, 0x96, 0x64, 0xae, 0xe0, 0x0c,
	0x97, 0x45, 0xda, 0xaa, 0x08, 0x15, 0xaa, 0xa6, 0x72, 0xf6, 0xb6, 0x11, 0x8c, 0x92, 0xbe, 0xdd,
	0x9b, 0x54, 0x2e, 0xe7, 0xb1, 0x68, 0xbe, 0xab, 0x89, 0xa9, 0x4f, 0xb1, 0xef, 0x4c, 0xe6, 0x70,
	0x74, 0x7f, 0x35, 0x7e, 0x02, 0x83, 0x5f, 0x6a, 0x23, 0x32, 0x0a, 0xd5, 0x3d, 0xf9, 0x0c, 0x58,
	0x5b, 0xda, 0xb5, 0xa2, 0x15, 0xc7, 0x57, 0xa2, 0x3f, 0x38, 0x36, 0x90, 0x11, 0xfb, 0x90, 0xbf,
	0xcf, 0x26, 0x37, 0x20, 0xf6, 0xc5, 0x78, 0x64, 0xc2, 0x9b, 0x87, 0x13, 0x26, 0xbb, 0x09, 0xbd,
	0x0e, 0xf7, 0x66, 0x4c, 0xed, 0x83, 0x8b, 0xc6, 0x0c, 0x9c, 0xc3, 0x41, 0x5d, 0xae, 0x54, 0xea,
	0x4e, 0x6f, 0x7e, 0x0c, 0xb9, 0xf1, 0xe9, 0x40, 0xb9, 0xf1, 0x1d, 0xe3, 0x1d, 0x86, 0x74, 0x1a,
	0x7a, 0xf3, 0x97, 0x30, 0x46, 0x75, 0x57, 0x04, 0xb3, 0x52, 0x6e, 0x1d, 0xe8, 0x26, 0x4c, 0x02,
	0xaa, 0xbb, 0x79, 0x54, 0xa6, 0x7f, 0x33, 0x38, 0x7d, 0x24, 0x10, 0x7f, 0x05, 0x47, 0xd6, 0xfd,
	0x56, 0x58, 0xd4, 0xae, 0x73, 0x68, 0x30, 0x93, 0x63, 0xd2, 0xbe, 0x93, 0xd4, 0x21, 0x6b, 0xef,
	0xff, 0x23, 0x79, 0x44, 0x48, 0x4b, 0xc8, 0x0b, 0x80, 0xd8, 0xa5, 0x32, 0xba, 0xa2, 0x60, 0x4c,
	0x8e, 0x48, 0xf9, 0x6a, 0x74, 0xd5, 0xd9, 0xb1, 0x03, 0xd9, 0x31, 0xdc, 0x88, 0x14, 0xb2, 0x2f,
	0xe0, 0x38, 0x56, 0x2f, 0xd0, 0x04, 0xb3, 0x28, 0xad, 0x60, 0x84, 0x3c, 0x21, 0xf5, 0x3a, 0x89,
	0x1d, 0x16, 0xbb, 0xec, 0xb0, 0x61, 0xc4, 0x48, 0xdd, 0x62, 0x37, 0x43, 0xfa, 0xfb, 0xef, 0xfe,
	0x05, 0x00, 0x00, 0xff, 0xff, 0x83, 0xed, 0xb7, 0xd6, 0x54, 0x03, 0x00, 0x00,
}
